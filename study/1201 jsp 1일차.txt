JavaSE - 기능적으론 강력(pc에서 할 수 있는 것은 다 가능) -> 배포 시 클래스 파일을 CD or USB로 구워야함
, 패치 시 패치된 버전의 클래스 파일을 다시 CD or USB로 받아야함ㅋㅋ
---> 불편하다! 
---> 해당 유저의 PC에 배포
---> JavaSE -> 독립 실행형 응용프로그램 <-> 웹기반 (수정이 용이) - 웹서버에 배포

웹기반 - 전자문서를 요청, 응답하는 프로토콜로 HTTP프로토콜을 이용
         - 클라이언트는 웹 브라우저를 이용해 서버에 요청을 하면 웹서버가 응답하는 전자문서를 실행시켜준다

웹브라우저는 Smart vs Dummy ??
- Dummy, 전자문서 해석기


하나의 웹어플케이션이 개발 및 구축되려면 서버측 수행을 담당하는 서버개발자, 서버가 실행한 결과를
받아와 웹표준을 준수하여 화면에 보여줄 웹퍼블리셔, 그 화면을 구성하는 코드가 단순히 디자인 국한된 
것이 아닌 동적 기능(프로그래밍)이 구현되어야 할 경우엔 프론트개발자, 이렇게 서버와 클라이언트
분야 마다 전문가들의 협업이 필요하다

JavaEE 서버 기반의 종류(유/무료)

----웹 컨테이너-----
- Tomcat(아파치 재단) : 무료
- Resin - 유료

--WAS : 웹 어플리케이션 서버----
웹컨테이너 + EJB컨테이너
지금 사용하지는 않지만, EJB(Enterprise Java Bean) 실행시킬 수 있다...
- WebLogic(Oracle) : 유료(강력하므로 전세계에서 가장 유명)
- Jeus(티맥스) : 유료
- JBoss(레드헷) : 유료(기술 서비스 제공), 무료(안도와줌)

--> 표준을 따라서 뭘 쓰더간에 사용방법은 동일 
ex) DBMS에 따라서 Connection, PreparedStatement, ResultSet을 쓰는 방법이 달라지지않는다!!
개발자는 표준에 따라 이용하면 되고 DBMS사에서 각 인터페이스들을 구현한 .jar(드라이버)파일을 가지고 있으면 댐!

<Host name="192.168.219.106"  appBase="webapps" unpackWARs="true" autoDeploy="true">
	<Context path="" docBase="C:\jsp_workspace\study"></Context> //웹사이트 등록(study), 배포
				//폴더경로를 아이피로 대체
</Host>


서버는 정적파일의 요청이 들어오면 관심없이 요청하는 파일을 그대로 보내주는 특성이 있다

jsp파일이 들어올 경우 스트립트릿 영역의 변수들은 톰캣서버 메모리에 올리고 표현식의 영역은 그 표현식의
코드의 실행결과로 해석하는 과정을 통한 뒤, 재정의하여 html파일 클라이언트에게 보내준다!

즉, 스크립트 영역은 클라이언트에서 실행되어야할 코드
<%%>(스크립트릿)는 서버에서 실행되어야할 코드 -> 서버는 스크립트영역에 있는 모든 것들을 모름!! 
